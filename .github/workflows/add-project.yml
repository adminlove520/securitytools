name: Add Project from Issue

on:
  issues:
    types: [opened]
  schedule:
    - cron: '0 0 * * 0'  # 每周日午夜运行

jobs:
  add-project:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub

      - name: Parse issue and update .gitmodules
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          REPO_OWNER: adminlove520
          REPO_NAME: securitytools
        run: |
          python .github/scripts/update_gitmodules.py
        if: github.event_name == 'issues'

      - name: Cleanup 404 repositories
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/scripts/cleanup_repos.py
        if: github.event_name == 'schedule' || github.event_name == 'issues'
      - name: Generate directory.json
        run: |
          python3 docs/directory-gen.py
        if: github.event_name == 'issues'

      - name: Commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .gitmodules
          git submodule update --init --recursive
          git add -A
          git commit -m "Cleanup 404 repositories and update files"
          git push origin main
        if: github.event_name == 'schedule' || github.event_name == 'issues'
      - name: Debug .gitmodules content
        run: |
          cat .gitmodules |grep "nuclei-templates"
          cat docs/directory.json |grep "nuclei-templates"
        if: github.event_name == 'issues'